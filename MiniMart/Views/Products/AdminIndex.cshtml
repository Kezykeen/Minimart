@model IEnumerable<MiniMart.Models.Product>
@helper Truncate(string input, int length)
{
if (input.Length <= length)
{
        @input
}
else
{
        @input.Substring(0, length)<text>...</text>
}
}
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create", "", new { @class = "btn btn-primary" })
</p>
<table id="products" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                Category
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>
    </thead>

    @foreach (var item in Model)
    {
        <tbody>
            <tr>
                <td>
                    <a href="@Url.Action("Details", "Products", new { id = item.Id})">@Html.DisplayFor(modelItem => item.Name)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Truncate(item.Description, 25)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        </tbody>
    }

</table>
